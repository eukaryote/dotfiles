#!/bin/zsh
# This hook is run after every virtualenv is activated.


# If we're in a directory that has a '.venv' file, then we're in a
# project directory for the virtualenv named in .venv, and will
# adjust PYTHONPATH (and possibly PATH) for this project.

() {
    # do nothing if .venv doesn't exist, but it can be empty if we don't wish
    # to auto-activate a virtualenv, which is useful if have multiple
    # virtualenvs for a given project and wish to use a '.project' file in
    # each virtualenv and rely on 'workon venv_name' instead of 'cd'.
    # We still want the PATH and PYTHONPATH changes in those cases.
    if [ ! -f ".venv" ] ; then
        return 0
    fi

    local project="$(pwd)"
    #echo "postactivate: project='${project}'"

    # any env vars changed here should have had their original values saved in
    # the 'preactivate' script so they can be restored in 'postdeactivate'.

    # add bin and/or scripts to PATH
    [[ -d "${project}/bin" || -d "${project}/scripts" ]] && {
        for subdir in bin scripts; do
            if [ -d "${project}/${subdir}" ]; then
                #echo "PATH += '$project/$subdir'"
                PATH="${project}/${subdir}:${PATH}"
            fi
        done
    }

    # add 'src' subdir to PYTHONPATH if it exists, else add current dir
    if [ -d "${project}/src" ]; then
        PYTHONPATH="${project}/src:${PYTHONPATH}"
    else
        PYTHONPATH="${project}:${PYTHONPATH}"
    fi
    export PYTHONPATH="${PYTHONPATH%:}"

    # The rehash may be needed if paths seem to be stale at times
    # rehash
}

#!/bin/sh

# A wrapper script intended to be installed as 'gpg'
# that invokes the 'gpg' executable at the expected
# /opt/gpg/default/bin/gpg location.
#
# If a GPG_MIN_VERSION env var is set, this script
# will first verify that the gpg to be executed
# is at least the required minimum version,
# failing if not. This is protection against
# an older version of GPG with security problems
# being invoked unknowingly.

GPG='/opt/gpg/default/bin/gpg'

gpg_version() {
    local version="$(${GPG} --version | head -n 1 | grep -E -o '([[:digit:]]|\.)+$' | tr -d '\n')"
    if [ -z "${version}" ]
    then
        >&2 echo "ERROR: couldn't determine GPG version"
        return 1
    fi
    echo -n "${version}"
}

check_installed() {
    if ! test -f "${GPG}"
    then
        >&2 echo "ERROR: gpg not found at expected location: ${GPG}"
        exit 1
    fi
}

check_version() {
    if [ -n "${GPG_MIN_VERSION:-}" ]
    then
        local version
        version=$(gpg_version) || return $?
        if [ "$(awk "BEGIN{ print \"${GPG_MIN_VERSION}\"<\"${version}\" }" < /dev/null)" -eq 0 ]
        then
            >&2 echo "ERROR: GPG_MIN_VERSION=${GPG_MIN_VERSION} not satisfied: found version ${version}"
            return 1
        fi
    fi
}

check_installed && check_version && exec "${GPG}" "$@"

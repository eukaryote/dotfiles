#!/bin/sh

# A wrapper script intended to be installed as 'gpg'
# in a directory on PATH (before system dirs that
# might contain ancient GPG versions) that fails
# if gpg2 is not found and otherwise execs gpg2
# with all parameters passed through to gpg2.

# If a GPG_MIN_VERSION environment variable
# is set, this script will verify the version
# found by running 'gpg2' is that version
# or newer, failing if not.

gpg_version() {
    local version="$(gpg2 --version | head -n 1 | grep -E -o '([[:digit:]]|\.)+$' | tr -d '\n')"
    if [ -z "${version}" ]
    then
        >&2 echo "ERROR: couldn't determine GPG version"
        return 1
    fi
    echo -n "${version}"
}

check_installed() {
    if ! which gpg2 >/dev/null 2>&1
    then
        >&2 echo "ERROR: gpg2 not found on PATH"
        exit 1
    fi
}

check_version() {
    if [ -n "${GPG_MIN_VERSION:-}" ]
    then
        local version
        version="$(gpg_version)" || return $?
        if [ "$(awk "BEGIN{ print \"${GPG_MIN_VERSION}\"<\"${version}\" }" < /dev/null)" -eq 0 ]
        then
            >&2 echo "ERROR: GPG_MIN_VERSION=${GPG_MIN_VERSION} not satisfied: found version ${version}"
            return 1
        fi
    fi
}

check_installed && check_version && exec gpg2 "$@"
